/**
 * This file was auto-generated by Fern from our API Definition.
 */
/// <reference types="node" />
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as ElevenLabs from "../../..";
import * as stream from "stream";
export declare namespace TextToSpeech {
    interface Options {
        environment?: core.Supplier<environments.ElevenLabsEnvironment | string>;
        xiApiKey?: core.Supplier<string | undefined>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
/**
 * Convert text into lifelike speech using a voice of your choice.
 */
export declare class TextToSpeech {
    protected readonly _options: TextToSpeech.Options;
    constructor(_options?: TextToSpeech.Options);
    /**
     * Converts text into speech using a voice of your choice and returns audio.
     */
    convert(voiceId: string, request: ElevenLabs.BodyTextToSpeechV1TextToSpeechVoiceIdPost, requestOptions?: TextToSpeech.RequestOptions): Promise<stream.Readable>;
    /**
     * Converts text into speech using a voice of your choice and returns audio as an audio stream.
     */
    convertAsStream(voiceId: string, request: ElevenLabs.BodyTextToSpeechV1TextToSpeechVoiceIdStreamPost, requestOptions?: TextToSpeech.RequestOptions): Promise<stream.Readable>;
}
