/**
 * This file was auto-generated by Fern from our API Definition.
 */
/// <reference types="node" />
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as fs from "fs";
import * as ElevenLabs from "../../..";
export declare namespace PronunciationDictionary {
    interface Options {
        environment?: core.Supplier<environments.ElevenLabsEnvironment | string>;
        xiApiKey?: core.Supplier<string | undefined>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
export declare class PronunciationDictionary {
    protected readonly _options: PronunciationDictionary.Options;
    constructor(_options?: PronunciationDictionary.Options);
    /**
     * Creates a new pronunciation dictionary from a lexicon .PLS file
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     */
    addFromFile(file: File | fs.ReadStream, request: ElevenLabs.BodyAddAPronunciationDictionaryV1PronunciationDictionariesAddFromFilePost, requestOptions?: PronunciationDictionary.RequestOptions): Promise<ElevenLabs.AddPronunciationDictionaryResponseModel>;
    /**
     * Get metadata for a pronunciation dictionary
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     */
    getMetadata(pronunciationDictionaryId: string, requestOptions?: PronunciationDictionary.RequestOptions): Promise<ElevenLabs.GetPronunciationDictionaryMetadataResponseModel>;
}
