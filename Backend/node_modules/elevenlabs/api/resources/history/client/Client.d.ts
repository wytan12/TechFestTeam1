/**
 * This file was auto-generated by Fern from our API Definition.
 */
/// <reference types="node" />
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as ElevenLabs from "../../..";
import * as stream from "stream";
export declare namespace History {
    interface Options {
        environment?: core.Supplier<environments.ElevenLabsEnvironment | string>;
        xiApiKey?: core.Supplier<string | undefined>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
/**
 * Accesses your history. Your history is a list of all your created audio including its metadata.
 */
export declare class History {
    protected readonly _options: History.Options;
    constructor(_options?: History.Options);
    /**
     * Returns metadata about all your generated audio.
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     */
    getAll(request?: ElevenLabs.HistoryGetAllRequest, requestOptions?: History.RequestOptions): Promise<ElevenLabs.GetHistoryResponseModel>;
    /**
     * Returns information about an history item by its ID.
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     */
    get(historyItemId: string, requestOptions?: History.RequestOptions): Promise<ElevenLabs.HistoryItem>;
    /**
     * Delete a history item by its ID
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     */
    delete(historyItemId: string, requestOptions?: History.RequestOptions): Promise<unknown>;
    /**
     * Returns the audio of an history item.
     */
    getAudio(historyItemId: string, requestOptions?: History.RequestOptions): Promise<stream.Readable>;
    /**
     * Download one or more history items. If one history item ID is provided, we will return a single audio file. If more than one history item IDs are provided, we will provide the history items packed into a .zip file.
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await elevenLabs.history.download({
     *         history_item_ids: []
     *     })
     */
    download(request: ElevenLabs.BodyDownloadHistoryItemsV1HistoryDownloadPost, requestOptions?: History.RequestOptions): Promise<void>;
}
