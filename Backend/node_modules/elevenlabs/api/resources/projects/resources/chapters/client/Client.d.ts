/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../../../environments";
import * as core from "../../../../../../core";
import * as ElevenLabs from "../../../../..";
import { Snapshots } from "../resources/snapshots/client/Client";
export declare namespace Chapters {
    interface Options {
        environment?: core.Supplier<environments.ElevenLabsEnvironment | string>;
        xiApiKey?: core.Supplier<string | undefined>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
export declare class Chapters {
    protected readonly _options: Chapters.Options;
    constructor(_options?: Chapters.Options);
    /**
     * Returns a list of your chapters for a project together and its metadata.
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await elevenLabs.projects.chapters.getAll("project-id")
     */
    getAll(projectId: string, requestOptions?: Chapters.RequestOptions): Promise<ElevenLabs.GetChaptersResponseModel>;
    /**
     * Returns information about a specific chapter.
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     */
    get(projectId: string, chapterId: string, requestOptions?: Chapters.RequestOptions): Promise<ElevenLabs.ChapterResponseModel>;
    /**
     * Delete a chapter by its chapter_id.
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     */
    delete(projectId: string, chapterId: string, requestOptions?: Chapters.RequestOptions): Promise<unknown>;
    /**
     * Starts conversion of a specific chapter.
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     */
    convert(projectId: string, chapterId: string, requestOptions?: Chapters.RequestOptions): Promise<unknown>;
    protected _snapshots: Snapshots | undefined;
    get snapshots(): Snapshots;
}
