/**
 * This file was auto-generated by Fern from our API Definition.
 */
/// <reference types="node" />
import * as environments from "../../../../../../../../environments";
import * as core from "../../../../../../../../core";
import * as ElevenLabs from "../../../../../../..";
import * as stream from "stream";
export declare namespace Snapshots {
    interface Options {
        environment?: core.Supplier<environments.ElevenLabsEnvironment | string>;
        xiApiKey?: core.Supplier<string | undefined>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
export declare class Snapshots {
    protected readonly _options: Snapshots.Options;
    constructor(_options?: Snapshots.Options);
    /**
     * Gets information about all the snapshots of a chapter, each snapshot corresponds can be downloaded as audio. Whenever a chapter is converted a snapshot will be automatically created.
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await elevenLabs.projects.chapters.snapshots.getAll("project-id", "chapter-id")
     */
    getAll(projectId: string, chapterId: string, requestOptions?: Snapshots.RequestOptions): Promise<ElevenLabs.ChapterSnapshotsResponseModel>;
    /**
     * Stream the audio from a chapter snapshot. Use GET /v1/projects/{project_id}/chapters/{chapter_id}/snapshots to return the chapter snapshots of a chapter.
     */
    stream(projectId: string, chapterId: string, chapterSnapshotId: string, requestOptions?: Snapshots.RequestOptions): Promise<stream.Readable>;
}
