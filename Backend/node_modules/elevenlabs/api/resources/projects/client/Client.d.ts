/**
 * This file was auto-generated by Fern from our API Definition.
 */
/// <reference types="node" />
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as ElevenLabs from "../../..";
import * as fs from "fs";
import * as stream from "stream";
import { Chapters } from "../resources/chapters/client/Client";
export declare namespace Projects {
    interface Options {
        environment?: core.Supplier<environments.ElevenLabsEnvironment | string>;
        xiApiKey?: core.Supplier<string | undefined>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
/**
 * Access, create and convert Projects programmatically, only specifically whitelisted accounts can access the Projects API. If you need access please contact our sales team.
 */
export declare class Projects {
    protected readonly _options: Projects.Options;
    constructor(_options?: Projects.Options);
    /**
     * Returns a list of your projects together and its metadata.
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await elevenLabs.projects.getAll()
     */
    getAll(requestOptions?: Projects.RequestOptions): Promise<ElevenLabs.GetProjectsResponseModel>;
    /**
     * Creates a new project, it can be either initialized as blank, from a document or from a URL.
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     */
    add(fromDocument: File | fs.ReadStream, request: ElevenLabs.BodyAddProjectV1ProjectsAddPost, requestOptions?: Projects.RequestOptions): Promise<ElevenLabs.AddProjectResponseModel>;
    /**
     * Returns information about a specific project. This endpoint returns more detailed information about a project than GET api.elevenlabs.io/v1/projects.
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     */
    get(projectId: string, requestOptions?: Projects.RequestOptions): Promise<ElevenLabs.ProjectExtendedResponseModel>;
    /**
     * Delete a project by its project_id.
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     */
    delete(projectId: string, requestOptions?: Projects.RequestOptions): Promise<unknown>;
    /**
     * Starts conversion of a project and all of its chapters.
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     */
    convert(projectId: string, requestOptions?: Projects.RequestOptions): Promise<unknown>;
    /**
     * Gets the snapshots of a project.
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await elevenLabs.projects.getSnapshots("project-id")
     */
    getSnapshots(projectId: string, requestOptions?: Projects.RequestOptions): Promise<ElevenLabs.ProjectSnapshotsResponseModel>;
    /**
     * Stream the audio from a project snapshot.
     */
    streamAudio(projectId: string, projectSnapshotId: string, requestOptions?: Projects.RequestOptions): Promise<stream.Readable>;
    /**
     * Updates the set of pronunciation dictionaries acting on a project. This will automatically mark text within this project as requiring reconverting where the new dictionary would apply or the old one no longer does.
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     */
    updatePronunciationDictionaries(projectId: string, request: ElevenLabs.BodyUpdatePronunciationDictionariesV1ProjectsProjectIdUpdatePronunciationDictionariesPost, requestOptions?: Projects.RequestOptions): Promise<unknown>;
    protected _chapters: Chapters | undefined;
    get chapters(): Chapters;
}
